{"version":3,"sources":["Components/ContactList/contactlist.module.css","Components/Filter/filter.module.css","app.module.css","Transition/pop.module.css","Redux/Actions/contactActions.js","Redux/Operations/contactOperation.js","Redux/Selectors/contactSelectors.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","Redux/Reducers/contactsReducers.js","Redux/store.js","index.js","Components/ContactForm/contactform.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterByNames","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","get","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","showContacts","createSelector","contact","toLowerCase","includes","contactform","isExist","duplicateContact","handleInput","e","setState","currentTarget","value","handleSubmit","preventDefault","props","map","setTimeout","onAddContact","this","className","styles","headWrapper","CSSTransition","in","appear","timeout","classNames","title","unmountOnExit","border","form","onSubmit","input","type","onChange","mask","pattern","placeholder","button","disabled","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","ContactList","handleDeleteContact","TransitionGroup","component","list","item","key","wrapper","telName","telNumber","closeBtn","onClick","onChangeFilter","container","target","App","onFetchContacts","isLoadingContacts","style","ContactForm","length","pop","loader","CircularProgress","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.522edc66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactlist_list__1AyOZ\",\"wrapper\":\"contactlist_wrapper__3_sTu\",\"closeBtn\":\"contactlist_closeBtn__2JWAY\",\"telNumber\":\"contactlist_telNumber__rxDXj\",\"enter\":\"contactlist_enter__Enea5\",\"enterActive\":\"contactlist_enterActive__2Inw7\",\"exit\":\"contactlist_exit__C5GAP\",\"exitActive\":\"contactlist_exitActive__26jYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter_container__3F_6j\",\"wrapper\":\"filter_wrapper__1C8AB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"app_appear__1HNeP\",\"appearActive\":\"app_appearActive__3GMES\",\"enter\":\"app_enter__3mXml\",\"enterActive\":\"app_enterActive__8HIA6\",\"exit\":\"app_exit__tKxcx\",\"exitActive\":\"app_exitActive__2F3Gp\",\"container\":\"app_container__OpCPS\",\"loader\":\"app_loader__2JDyt\",\"title\":\"app_title__11Ubi\",\"headWrapper\":\"app_headWrapper__146KS\",\"error\":\"app_error__jhODt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__aUriR\",\"enterActive\":\"pop_enterActive__3Utcs\",\"exit\":\"pop_exit__1Rgxg\",\"exitActive\":\"pop_exitActive__-bp_m\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteError\");\n\nconst filterByNames = createAction(\"contacts/filter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterByNames,\n};\n","import axios from \"axios\";\nimport contactsActions from \"../Actions/contactActions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", { name, number })\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.deleteContactError(error)));\n};\n\nexport default { addContact, fetchContacts, deleteContact };\n","import { createSelector } from \"reselect\";\n\nconst getContacts = (state) => state.contacts.items;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst getLoading = (state) => state.contacts.loading;\n\nconst showContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  showContacts,\n};\n","import React, { Component } from \"react\";\nimport styles from \"./contactform.module.css\";\nimport contactsOperations from \"../../Redux/Operations/contactOperation\";\nimport contactsSelectors from \"../../Redux/Selectors/contactSelectors\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport InputMask from \"react-input-mask\";\n\nclass contactform extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    isExist: false,\n    duplicateContact: \"\",\n  };\n\n  handleInput = (e) =>\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    const avaibleNames = contacts.map((contact) => contact.name.toLowerCase());\n\n    if (avaibleNames.includes(name.toLowerCase())) {\n      this.setState({ isExist: true, duplicateContact: name });\n      setTimeout(\n        () => this.setState({ isExist: false, duplicateContact: \"\" }),\n        5000\n      );\n    } else {\n      this.props.onAddContact(name, number);\n      this.setState({\n        name: \"\",\n        number: \"\",\n        isExist: false,\n        duplicateContact: \"\",\n      });\n    }\n  };\n\n  render() {\n    const { name, number, isExist, duplicateContact } = this.state;\n    return (\n      <div>\n        <div className={styles.headWrapper}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames={styles}\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n\n          <CSSTransition\n            in={isExist}\n            timeout={250}\n            classNames={styles}\n            unmountOnExit\n          >\n            <div className={styles.error}>\n              {duplicateContact} already exist!\n            </div>\n          </CSSTransition>\n        </div>\n\n        <div className={styles.border}>\n          <form className={styles.form} onSubmit={this.handleSubmit}>\n            <h3>Name</h3>\n            <input\n              className={styles.input}\n              name=\"name\"\n              type=\"text\"\n              onChange={this.handleInput}\n              value={name}\n            ></input>\n            <h3>Number</h3>\n\n            <InputMask\n              mask=\"999-99-99\"\n              name=\"number\"\n              className={styles.input}\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n              placeholder=\"000-00-00\"\n              type=\"tel\"\n              onChange={this.handleInput}\n              value={number}\n            />\n\n            <br />\n            <button\n              className={styles.button}\n              type=\"submit\"\n              disabled={!this.state.name || !this.state.number}\n            >\n              Add contact\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(contactform);\n","import React, { Component } from \"react\";\nimport styles from \"./contactlist.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../Redux/Operations/contactOperation\";\nimport contactsSelectors from \"../../Redux/Selectors/contactSelectors\";\nimport PropTypes from \"prop-types\";\n\nclass ContactList extends Component {\n  handleDeleteContact = (id) => () => {\n    const { deleteContact } = this.props;\n\n    deleteContact(id);\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <TransitionGroup component=\"ul\" className={styles.list}>\n        {contacts.map((item) => (\n          <CSSTransition key={item.id} timeout={250} classNames={styles}>\n            <li>\n              <div className={styles.wrapper}>\n                <span className={styles.telName}>{item.name}</span>\n                <span className={styles.telNumber}>{item.number}</span>\n\n                <button\n                  className={styles.closeBtn}\n                  id={item.id}\n                  onClick={this.handleDeleteContact(item.id)}\n                >\n                  &times;\n                </button>\n              </div>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return { contacts: contactsSelectors.showContacts(state) };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../Redux/Actions/contactActions\";\nimport contactsSelectors from \"../../Redux/Selectors/contactSelectors\";\n\nconst Filter = ({ onChangeFilter, value }) => (\n  <div className={styles.container}>\n    <div className={styles.wrapper}>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onChange={(e) => onChangeFilter(e.target.value)}\n        value={value}\n        name=\"filter\"\n      />\n    </div>\n  </div>\n);\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func,\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  filter: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.filterByNames,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { ContactForm } from \"./Components/ContactForm\";\nimport { ContactList } from \"./Components/ContactList\";\nimport { Filter } from \"./Components/Filter\";\nimport style from \"./app.module.css\";\nimport pop from \"./Transition/pop.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"./Redux/Operations/contactOperation\";\nimport contactsSelectors from \"./Redux/Selectors/contactSelectors\";\nimport { CSSTransition } from \"react-transition-group\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    const { contacts, isLoadingContacts } = this.props;\n    return (\n      <div className={style.container}>\n        <ContactForm />\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={500}\n          classNames={pop}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        {isLoadingContacts && (\n          <div className={style.loader}>\n            <CircularProgress />\n          </div>\n        )}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getContacts(state),\n  isLoadingContacts: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"../Actions/contactActions\";\n\nconst addContact = (state, action) => {\n  return [...state, action.payload];\n};\nconst deleteContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\n  [contactsActions.addContactSuccess]: addContact,\n  [contactsActions.deleteContactSuccess]: deleteContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.filterByNames]: (state, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n});\n","import contactReducer from \"./Reducers/contactsReducers\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"contactform_border__2Qa-H\",\"title\":\"contactform_title__1CS2c\",\"headWrapper\":\"contactform_headWrapper__1Wn59\",\"error\":\"contactform_error__3D61h\",\"appear\":\"contactform_appear__3uau5\",\"appearActive\":\"contactform_appearActive__2IH7B\",\"enter\":\"contactform_enter__2J_JF\",\"enterActive\":\"contactform_enterActive__1qNAY\",\"exit\":\"contactform_exit__1smzN\",\"exitActive\":\"contactform_exitActive__3T0ZM\",\"form\":\"contactform_form__C8GtC\",\"button\":\"contactform_button__1quAD\",\"input\":\"contactform_input__1HjnP\"};"],"sourceRoot":""}